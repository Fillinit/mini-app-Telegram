import telebot
import requests
import os
from telebot import types
from invoices import create_invoice_payload
from decouple import config

# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
BOT_TOKEN = config("BOT_TOKEN")
API_BASE = config("API_BASE")
token_url = config("TOKEN_URL")

bot = telebot.TeleBot(BOT_TOKEN, parse_mode="HTML")


# –°—Ç–∞—Ä—Ç
@bot.message_handler(commands=["start"])
def send_welcome(message):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", web_app=types.WebAppInfo(url="http://127.0.0.1:3000/")))
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç üëã\n–Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ –µ–¥—ã.\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é:",
        reply_markup=kb
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
@bot.message_handler(content_types=["successful_payment"])
def successful_payment(message):
    payload = message.successful_payment.invoice_payload
    order_id = payload.split(":")[-1]

    try:
        requests.post(f"{API_BASE}/orders/{order_id}/mark_paid/")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã: {e}")
        return

    bot.send_message(message.chat.id, f"‚úÖ –û–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–∫–∞–∑ ‚Ññ{order_id} –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")


# –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ (–∏–Ω–≤–æ–π—Å–∞) –¥–ª—è –æ–ø–ª–∞—Ç—ã
def send_invoice(chat_id: int, order_id: int, title: str, description: str, amount: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω–≤–æ–π—Å (Telegram Payments).
    amount —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–ø–µ–π–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10000 = 100 —Ä—É–±.)
    """
    payload = create_invoice_payload(order_id)
    prices = [types.LabeledPrice(label=title, amount=amount)]

    bot.send_invoice(
        chat_id,
        title=title,
        description=description,
        provider_token=os.getenv("PAYMENT_PROVIDER_TOKEN"),
        currency="RUB",
        prices=prices,
        start_parameter=f"order-{order_id}",
        invoice_payload=payload
    )


# –ó–∞–ø—É—Å–∫ long polling
if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (long polling)...")
    bot.infinity_polling(skip_pending=True)
